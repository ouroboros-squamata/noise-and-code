
from flask import Flask, render_template, request, redirect, url_for
import sqlite3
from datetime import datetime
import uuid

app = Flask(__name__)

def init_db():
    with sqlite3.connect("database.db") as conn:
        conn.execute("""
        CREATE TABLE IF NOT EXISTS blogs (
            id TEXT PRIMARY KEY,
            title TEXT,
            content TEXT,
            views INTEGER DEFAULT 0,
            created_at TEXT
        )
        """)
        conn.commit()

@app.route("/")
def home():
    with sqlite3.connect("database.db") as conn:
        blogs = conn.execute("SELECT id, title FROM blogs ORDER BY views DESC LIMIT 3").fetchall()
    return render_template("index.html", blogs=blogs)

@app.route("/generate", methods=["GET", "POST"])
def generate():
    if request.method == "POST":
        idea = request.form["idea"]
        logic = request.form["scientific_basis"]
        emotion = request.form["emotion_or_problem"]
        outcome = request.form["outcome"]

        # Placeholder blog generation
        title = f"Turning '{idea}' Into Power"
        content = f"""
        <h2>{title}</h2>
        <p><strong>Idea:</strong> {idea}</p>
        <p><strong>Scientific Basis:</strong> {logic}</p>
        <p><strong>Emotion Behind It:</strong> {emotion}</p>
        <p><strong>Positive Outcome:</strong> {outcome}</p>
        <p>This blog would be generated by GPT with full structure and positivity applied.</p>
        """

        post_id = str(uuid.uuid4())
        with sqlite3.connect("database.db") as conn:
            conn.execute("INSERT INTO blogs (id, title, content, created_at) VALUES (?, ?, ?, ?)",
                         (post_id, title, content, datetime.now().isoformat()))
            conn.commit()
        return redirect(url_for("view_blog", blog_id=post_id))
    return render_template("generate.html")

@app.route("/blog/<blog_id>")
def view_blog(blog_id):
    with sqlite3.connect("database.db") as conn:
        blog = conn.execute("SELECT * FROM blogs WHERE id = ?", (blog_id,)).fetchone()
        if blog:
            conn.execute("UPDATE blogs SET views = views + 1 WHERE id = ?", (blog_id,))
            conn.commit()
            return render_template("blog.html", blog=blog)
    return "Blog not found", 404

if __name__ == "__main__":
    init_db()
    app.run(debug=True)
